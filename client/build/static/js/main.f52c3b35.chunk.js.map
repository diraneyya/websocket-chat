{"version":3,"sources":["index.js"],"names":["Search","Input","Text","Typography","Meta","Card","protocol","window","location","href","startsWith","webSocketServerHost","match","webSocketServerURL","client","W3CWebSocket","App","state","userName","isLoggedIn","messages","onButtonClicked","value","send","JSON","stringify","type","msg","user","setState","searchVal","onopen","console","log","onmessage","message","dataFromServer","parse","data","className","id","this","style","fontSize","display","flexDirection","paddingBottom","map","key","width","margin","alignSelf","loading","avatar","color","backgroundColor","toUpperCase","title","description","placeholder","enterButton","size","onChange","e","target","onSearch","autoFocus","padding","Component","ReactDOM","render","document","getElementById"],"mappings":"iUAOQA,G,cAAWC,IAAXD,QACAE,EAASC,IAATD,KACAE,EAASC,IAATD,KAEFE,EAAWC,OAAOC,SAASC,KAAKC,WAAW,YAAc,MAAQ,KACjEC,EAAsBJ,OAAOC,SAASC,KAAKG,MAAM,sBAAsB,GACvEC,EAAkB,UAAMP,EAAN,cAAoBK,GAEtCG,EAAS,IAAIC,eAAaF,GAEXG,E,4MAEnBC,MAAO,CACLC,SAAU,GACVC,YAAY,EACZC,SAAU,I,EAGZC,gBAAkB,SAACC,GACjBR,EAAOS,KAAKC,KAAKC,UAAU,CACzBC,KAAM,UACNC,IAAKL,EACLM,KAAM,EAAKX,MAAMC,YAEnB,EAAKW,SAAS,CAAEC,UAAW,M,uDAE7B,WAAqB,IAAD,OAClBhB,EAAOiB,OAAS,WACdC,QAAQC,IAAI,+BAEdnB,EAAOoB,UAAY,SAACC,GAClB,IAAMC,EAAiBZ,KAAKa,MAAMF,EAAQG,MAC1CN,QAAQC,IAAI,cAAeG,GACC,YAAxBA,EAAeV,MACjB,EAAKG,UAAS,SAACZ,GAAD,MACX,CACCG,SAAS,GAAD,mBAAMH,EAAMG,UAAZ,CACR,CACEO,IAAKS,EAAeT,IACpBC,KAAMQ,EAAeR,e,oBAOjC,WAAU,IAAD,OACP,OACE,yBAAKW,UAAU,OAAOC,GAAG,WACtBC,KAAKxB,MAAME,WACZ,6BACE,yBAAKoB,UAAU,SACb,kBAACrC,EAAD,CAAMsC,GAAG,eAAed,KAAK,YAAYgB,MAAO,CAAEC,SAAU,SAA5D,mBAAuFF,KAAKxB,MAAMC,WAEpG,yBAAKwB,MAAO,CAAEE,QAAS,OAAQC,cAAe,SAAUC,cAAe,IAAMN,GAAG,YAC7EC,KAAKxB,MAAMG,SAAS2B,KAAI,SAAAZ,GAAO,OAC9B,kBAAC,IAAD,CAAMa,IAAKb,EAAQR,IAAKe,MAAO,CAAEO,MAAO,IAAKC,OAAQ,iBAAkBC,UAAW,EAAKlC,MAAMC,WAAaiB,EAAQP,KAAO,WAAa,cAAgBwB,SAAS,GAC7J,kBAAChD,EAAD,CACEiD,OACE,kBAAC,IAAD,CAAQX,MAAO,CAAEY,MAAO,UAAWC,gBAAiB,YAAcpB,EAAQP,KAAK,GAAG4B,eAEpFC,MAAOtB,EAAQP,KAAK,IACpB8B,YAAavB,EAAQR,WAK7B,yBAAKY,UAAU,UACb,kBAACvC,EAAD,CACE2D,YAAY,yBACZC,YAAY,OACZtC,MAAOmB,KAAKxB,MAAMa,UAClB+B,KAAK,QACLC,SAAU,SAACC,GAAD,OAAO,EAAKlC,SAAS,CAAEC,UAAWiC,EAAEC,OAAO1C,SACrD2C,SAAU,SAAA3C,GAAK,OAAI,EAAKD,gBAAgBC,IACxC4C,WAAS,MAKf,yBAAKxB,MAAO,CAAEyB,QAAS,eACrB,kBAACnE,EAAD,CACE2D,YAAY,iBACZC,YAAY,QACZC,KAAK,QACLI,SAAU,SAAA3C,GAAK,OAAI,EAAKO,SAAS,CAAEV,YAAY,EAAMD,SAAUI,a,GA3E1C8C,aAoFjCC,IAASC,OAAO,kBAACtD,EAAD,MAASuD,SAASC,eAAe,U","file":"static/js/main.f52c3b35.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nimport './index.css'\n\nconst { Search } = Input;\nconst { Text } = Typography;\nconst { Meta } = Card;\n\nconst protocol = window.location.href.startsWith('https://') ? 'wss' : 'ws';\nconst webSocketServerHost = window.location.href.match(/https?:\\/\\/([^/]+)/)[1];\nconst webSocketServerURL = `${protocol}://${webSocketServerHost}`;\n\nconst client = new W3CWebSocket(webSocketServerURL);\n\nexport default class App extends Component {\n\n  state ={\n    userName: '',\n    isLoggedIn: false,\n    messages: []\n  }\n\n  onButtonClicked = (value) => {\n    client.send(JSON.stringify({\n      type: \"message\",\n      msg: value,\n      user: this.state.userName\n    }));\n    this.setState({ searchVal: '' })\n  }\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n    client.onmessage = (message) => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('got reply! ', dataFromServer);\n      if (dataFromServer.type === \"message\") {\n        this.setState((state) =>\n          ({\n            messages: [...state.messages,\n            {\n              msg: dataFromServer.msg,\n              user: dataFromServer.user\n            }]\n          })\n        );\n      }\n    };\n  }\n  render() {\n    return (\n      <div className=\"main\" id='wrapper'>\n        {this.state.isLoggedIn ?\n        <div>\n          <div className=\"title\">\n            <Text id=\"main-heading\" type=\"secondary\" style={{ fontSize: '36px' }}>Websocket Chat: {this.state.userName}</Text>\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'column', paddingBottom: 50 }} id=\"messages\">\n            {this.state.messages.map(message => \n              <Card key={message.msg} style={{ width: 300, margin: '16px 4px 0 4px', alignSelf: this.state.userName === message.user ? 'flex-end' : 'flex-start' }} loading={false}>\n                <Meta\n                  avatar={\n                    <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>{message.user[0].toUpperCase()}</Avatar>\n                  }\n                  title={message.user+\":\"}\n                  description={message.msg}\n                />\n              </Card> \n            )}\n          </div>\n          <div className=\"bottom\">\n            <Search\n              placeholder=\"input message and send\"\n              enterButton=\"Send\"\n              value={this.state.searchVal}\n              size=\"large\"\n              onChange={(e) => this.setState({ searchVal: e.target.value })}\n              onSearch={value => this.onButtonClicked(value)}\n              autoFocus\n            />\n          </div> \n        </div>\n        :\n        <div style={{ padding: '200px 40px' }}>\n          <Search\n            placeholder=\"Enter Username\"\n            enterButton=\"Login\"\n            size=\"large\"\n            onSearch={value => this.setState({ isLoggedIn: true, userName: value })}\n          />\n        </div>\n      }\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}